version: '3.9'
services:
  db-master:
    container_name: pr_dbmaster
    image: 'postgres:15'
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_REPLICA_USER: '${POSTGRES_REPLICA_USER}'
      POSTGRES_REPLICA_PASSWORD: '${POSTGRES_REPLICA_PASSWORD}'
    volumes:
      - './data/db-master:/var/lib/postgresql/data'
      - './scripts/db-master:/docker-entrypoint-initdb.d'
    networks:
      internal_network:
        ipv4_address: 10.0.0.2
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
  db-replica:
    container_name: pr_dbreplica
    image: 'postgres:15'
    environment:
      POSTGRES_USER: '${POSTGRES_REPLICA_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_REPLICA_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_MASTER_HOST: db-master
      POSTGRES_MASTER_DB: '${POSTGRES_DB}'
      POSTGRES_REPLICA_USER: '${POSTGRES_REPLICA_USER}'
      POSTGRES_REPLICA_PASSWORD: '${POSTGRES_REPLICA_PASSWORD}'
    volumes:
      - './data/db-replica:/var/lib/postgresql/data'
      - './scripts/db-replica:/docker-entrypoint-initdb.d'
    networks:
      internal_network:
        ipv4_address: 10.0.0.3
    depends_on:
      db-master:
        condition: service_healthy    
    restart: unless-stopped
  app:
    container_name: pr_nodeapp
    build: ./app
    working_dir: /app
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_HOST: db-master
      POSTGRES_PORT: '${POSTGRES_PORT}'
      POSTGRES_DB: '${POSTGRES_REPLICA_DB}'
      POSTGRES_REPLICA_USER: '${POSTGRES_REPLICA_USER}'
      POSTGRES_REPLICA_PASSWORD: '${POSTGRES_REPLICA_PASSWORD}'
      POSTGRES_REPLICA_HOST: db-replica
      POSTGRES_REPLICA_PORT: '${POSTGRES_REPLICA_PORT}'
      POSTGRES_REPLICA_DB: '${POSTGRES_DB}'
    volumes:
      - './app:/app'
    ports:
      - '127.0.0.1:3000:3000'
    networks:
      internal_network:
        ipv4_address: 10.0.0.4
    depends_on:
      db-master:
        condition: service_healthy
    command: ./start.sh
  pgadmin:
    container_name: pr_pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - '127.0.0.1:5050:80'
    logging:
      driver: none
    networks:
      internal_network:
        ipv4_address: 10.0.0.5
networks:
  internal_network:
    name: postgresreplica_internal_network
    ipam:
      config:
        - subnet: 10.0.0.0/24
